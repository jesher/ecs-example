name: Terraform Destroy
on:
  repository_dispatch:
    types: [terraform-destroy-command]

jobs:
  terraform_plan:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infra

    steps:
      - uses: actions/checkout@v2
        with:
          terraform_version: 0.13.5
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        id: validate
        continue-on-error: true
        run: terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update comment success
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ success() }}
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN  }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
              ___
              ## Terraform Destroy ![Terraform Destroy](https://img.shields.io/badge/Terraform%20destroy-passed-green)
              <details><summary>view destroy</summary>
              <p>


              ```bash
              ${{ steps.destroy.outputs.stdout }}
              ```

              </p>
              </details>

      - name: Update comment failure
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ failure() }}
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN  }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
              ___
              ## Terraform Destroy ![Terraform Destroy](https://img.shields.io/badge/Terraform%20destroy-error-red)
              <details><summary>view destroy</summary>
              <p>


              ```bash
              ${{ steps.destroy.outputs.stdout }}
              ```

              </p>
              </details>
